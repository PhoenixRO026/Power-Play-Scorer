plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id "com.guardsquare.appsweep" version "latest.release"
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.android.gms.oss-licenses-plugin'
}

android {
    namespace 'com.phoenix.powerplayscorer'
    compileSdk 33

    defaultConfig {
        applicationId "com.phoenix.powerplayscorer"
        minSdk 21
        targetSdk 33
        versionCode 4
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            versionNameSuffix '-release'
            signingConfig signingConfigs.debug
            applicationIdSuffix '.release'
        }
        debug {
            versionNameSuffix '-debug'
            applicationIdSuffix '.debug'
        }
        production {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    appsweep {
        apiKey 'gs_appsweep_TC7BwCp_ww2mHFTr1VGqpjC2xLWF7rzbWPn8CKz5'
    }
}

dependencies {
    def composeBom = platform('androidx.compose:compose-bom:2022.10.00')
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha03'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0-alpha03'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'

    implementation platform('com.google.firebase:firebase-bom:30.5.0')
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation ('com.google.firebase:firebase-analytics-ktx')
    implementation 'com.google.firebase:firebase-perf-ktx'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'androidx.navigation:navigation-compose:2.5.3'
    implementation 'com.google.accompanist:accompanist-navigation-animation:0.25.1'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    //Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-android-compiler:2.44'
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    implementation("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // To use Kotlin Symbol Processing (KSP)
    //ksp("androidx.room:room-compiler:$room_version")
}

kapt {
    correctErrorTypes true
}